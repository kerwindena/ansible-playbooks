- hosts: localhost

  gather_facts: no

  vars_prompt:
  - name: hc2_address
    prompt: Please enter the address of the hc2 device to bootstrap
    private: no

  tasks:

  - name: Add the host to a dynamic group
    add_host:
      hostname: "{{hc2_address}}"
      groups:
      - hc2_bootstrap_target
    tags: always


- hosts: hc2_bootstrap_target

  gather_facts: no
  become_method: su

  vars:
    ansible_user: alarm
    ansible_become_pass: root

  pre_tasks:

  - name: Test if alarm credentials are still present
    wait_for_connection:
      sleep: 2.5
      timeout: 2.5
    ignore_errors: yes
    register: try_alarm_user
    failed_when: try_alarm_user.failed and 'Permission denied (publickey)' in try_alarm_user.msg

  - name: Exit early because the alarm user is gone
    meta: end_play
    when: try_alarm_user is not defined or try_alarm_user is failed

  - block:

    - name: Initialize the pacman-keys
      raw: pacman-key --init
      ignore_errors: yes
      register: first_alarm_user_su_command

    - name: Exit early because the alarm -> su route is already closed
      meta: end_play
      when: first_alarm_user_su_command is failed

    - name: Add the ArchLinuxArm keys to the pacman-keys
      raw: pacman-key --populate archlinuxarm

    - name: Ensure python is installed
      raw: pacman -Syy --noconfirm --noprogressbar python

    become: yes

  roles:

  - role: user
    user_name: beinke
    user_password: "{{ users.beinke.password }}"
    user_ssh_keys: "{{ users.beinke.ssh_keys }}"
    user_sudo: "{{ users.beinke.sudo }}"

  tasks:

  - name: Ensure the rxvt terminfo is present
    package:
      name: rxvt-unicode-terminfo
    become: yes

  - name: Drop the connection forcefully
    meta: reset_connection


- hosts: hc2_bootstrap_target

  pre_tasks:

  - name: Earlier errors do not need to affect this
    meta: clear_host_errors

  - block:

    - name: Remove the password from the root account
      user:
        name: root
        password: !

    - name: Ensure the alarm user is gone
      user:
        name: alarm
        state: absent
        force: yes
        remove: yes

    become: yes

  roles:

  - role: user
    user_name: beinke
    user_password: "{{ users.beinke.password }}"
    user_ssh_keys: "{{ users.beinke.ssh_keys }}"
    user_sudo: "{{ users.beinke.sudo }}"

  - role: ssh-server
